{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\react1\\\\redux_test\\\\react_extension\\\\src\\\\components\\\\3_hooks\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Demo() {\n  _s();\n\n  const [count, setCount] = React.useState(0);\n  const myRef = React.useRef();\n  React.useEffect(() => {\n    let timer = setInterval(() => {\n      setCount(count => count + 1);\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []); //   console.log(count, setCount)\n\n  function add() {\n    setCount(count + 1);\n  }\n\n  function unmount() {\n    ReactDOM.unmountComponentAtNode(document.getElementById('root'));\n  }\n\n  function show() {\n    alert;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: myRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u5F53\\u524D\\u6C42\\u548C\\u4E3A\\uFF1A\", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: add,\n      children: \"\\u70B9\\u6211+1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: unmount,\n      children: \"\\u70B9\\u6211\\u6B7B\\u5988\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: show,\n      children: \"\\u70B9\\u6211\\u63D0\\u793A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Demo, \"w0KNyNtEDUQM6rYcyHug4bzJH/Q=\");\n\n_c = Demo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"sources":["C:/Users/1/Desktop/react1/redux_test/react_extension/src/components/3_hooks/index.jsx"],"names":["React","ReactDOM","Demo","count","setCount","useState","myRef","useRef","useEffect","timer","setInterval","clearInterval","add","unmount","unmountComponentAtNode","document","getElementById","show","alert"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,KAAK,CAACK,QAAN,CAAe,CAAf,CAA1B;AACA,QAAMC,KAAK,GAAGN,KAAK,CAACO,MAAN,EAAd;AAEAP,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AACpB,QAAIC,KAAK,GAAGC,WAAW,CAAC,MAAM;AAC5BN,MAAAA,QAAQ,CAAED,KAAD,IAAWA,KAAK,GAAG,CAApB,CAAR;AACD,KAFsB,EAEpB,IAFoB,CAAvB;AAIA,WAAO,MAAM;AACXQ,MAAAA,aAAa,CAACF,KAAD,CAAb;AACD,KAFD;AAGD,GARD,EAQG,EARH,EAJ6B,CAc7B;;AACA,WAASG,GAAT,GAAe;AACbR,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAED,WAASU,OAAT,GAAmB;AACjBZ,IAAAA,QAAQ,CAACa,sBAAT,CAAgCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhC;AACD;;AAED,WAASC,IAAT,GAAe;AACXC,IAAAA,KAAK;AACR;;AAED,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAEZ;AAAxB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,yDAAWH,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAES,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAEC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,OAAO,EAAEI,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GApCuBf,I;;KAAAA,I","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nexport default function Demo() {\r\n  const [count, setCount] = React.useState(0)\r\n  const myRef = React.useRef()\r\n\r\n  React.useEffect(() => {\r\n    let timer = setInterval(() => {\r\n      setCount((count) => count + 1)\r\n    }, 1000)\r\n\r\n    return () => {\r\n      clearInterval(timer)\r\n    }\r\n  }, [])\r\n\r\n  //   console.log(count, setCount)\r\n  function add() {\r\n    setCount(count + 1)\r\n  }\r\n\r\n  function unmount() {\r\n    ReactDOM.unmountComponentAtNode(document.getElementById('root'))\r\n  }\r\n\r\n  function show(){\r\n      alert\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"text\" ref={myRef} />\r\n      <h2>当前求和为：{count}</h2>\r\n      <button onClick={add}>点我+1</button>\r\n      <button onClick={unmount}>点我死妈</button>\r\n      <button onClick={show}>点我提示</button>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}